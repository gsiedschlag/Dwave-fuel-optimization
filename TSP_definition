#The problem is to optimize the delta V, time, or distance needed to travel
#between x satellites in given orbits based on their orbit parameters ri & vi.
#This code defines the funtions necessary to input initial conditions and 
#read results of the QPU.

#============================================
import itertools
from dwave.system import LeapHybridSampler
import pandas as pd
import parambulator
from dwave-networkx import *
import networkx as nx


Data_name = "Orbit_parameters.txt" #text file with all orbit parameters for satellites 
Mp = 300 #mass of propellant in kg
Mo = 500 #Total mass of space craft in kg
Isp = 300 # Specific impulse of engine in s

#pars input data
params = pd.read_csv(Data_name, header=None)
params.columns = ['r0x','r0y','r0z','v0x','v0y','v0z']

#Calculate delta V's, fuel requirements, and delta t's to move from one orbit to another
deltas = parambulator(params['r0x'],params['r0y'],params['r0z'],\
                      params['v0x'],params['v0y'],params['v0z'],\
                          Mp,Mo,Isp)

#Turn matrix of Deltas into nodes and edges for reading                         
routes = nx.Graph()
for i in range(len(deltas))
#choose sampler and send populated bqm to sampler
sampler = LeapHybridSampler()

#Test routes on quantum chip
bqm = traveling_salesperson_bqm(routes,sampler)

